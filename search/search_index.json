{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Hibby's Packet Radio Guide Hi, welcome - thanks for coming by! What is Packet Radio? Packet Radio is a niche within Amateur Radio . It combines elements of networking and the dark art of software to connect computers over a long distance without wires. With packet radio we can transfer information, files or messages without relying on the internet. We can control and understand every part of our link, from the computer and the software, through the modem, radio and antenna. Taking Your First Steps This is a broad part of our hobby, and it can be overwhelming to get started. There are lots of interconnecting components and new terms to learn. Keep your eye on the glossary if the terms get confusing. The key things you will need are: An Amateur Radio License A radio An antenna A computer A modem A cable to interface between the computer & radio Software Recommended first setup If you don't want to spend a lot of money to dip your toe in, you don't have to. The only things you'll need are a radio, a computer and a cable to interface between the two. Everything else can run as software. Have a look to see if you have a proven radio and install QtSoundModem and QtTermTCP to access someone else's node. I'd recommend trying 1200bd on VHF or UHF first, but slower modes on HF are perfectly do-able as well if you're on an island or stuck in a ditch, Take a look at the beginner's guide to see more detail about how to get started with this.","title":"Home"},{"location":"#welcome-to-hibbys-packet-radio-guide","text":"Hi, welcome - thanks for coming by!","title":"Welcome to Hibby's Packet Radio Guide"},{"location":"#what-is-packet-radio","text":"Packet Radio is a niche within Amateur Radio . It combines elements of networking and the dark art of software to connect computers over a long distance without wires. With packet radio we can transfer information, files or messages without relying on the internet. We can control and understand every part of our link, from the computer and the software, through the modem, radio and antenna.","title":"What is Packet Radio?"},{"location":"#taking-your-first-steps","text":"This is a broad part of our hobby, and it can be overwhelming to get started. There are lots of interconnecting components and new terms to learn. Keep your eye on the glossary if the terms get confusing. The key things you will need are: An Amateur Radio License A radio An antenna A computer A modem A cable to interface between the computer & radio Software","title":"Taking Your First Steps"},{"location":"#recommended-first-setup","text":"If you don't want to spend a lot of money to dip your toe in, you don't have to. The only things you'll need are a radio, a computer and a cable to interface between the two. Everything else can run as software. Have a look to see if you have a proven radio and install QtSoundModem and QtTermTCP to access someone else's node. I'd recommend trying 1200bd on VHF or UHF first, but slower modes on HF are perfectly do-able as well if you're on an island or stuck in a ditch, Take a look at the beginner's guide to see more detail about how to get started with this.","title":"Recommended first setup"},{"location":"about/","text":"About Hello, I'm Hibby MM0RFN and I have compiled this to the best of my ability. I work on the Debian project and can be emailed via hibby at debian.org The things I love include Scottish Consulate & 57North & Bikes & Hacking & Debian & Radio & Curling & \ud83c\udff3\ufe0f\u200d\ud83c\udf08 & \ud83e\udd8a","title":"About"},{"location":"about/#about","text":"Hello, I'm Hibby MM0RFN and I have compiled this to the best of my ability. I work on the Debian project and can be emailed via hibby at debian.org The things I love include Scottish Consulate & 57North & Bikes & Hacking & Debian & Radio & Curling & \ud83c\udff3\ufe0f\u200d\ud83c\udf08 & \ud83e\udd8a","title":"About"},{"location":"beginners-guide/","text":"Beginner's Guide Key Concepts In packet radio, we connect our computers together over the air to transmit data wirelessly. As it's not as polished as Wifi (but much more fun), there are a few things you'll need to be familiar with before you can get stuck in to the network. Equipment You'll need a Radio, and a computer with a cable to connect them together. Sometimes these are easy to buy online, and the moreadventurous can make them. If you've done FT-8 or another datamode, you might already have this cable. Modem You'll need a modem of some variety. For more advanced users this of often a piece of hardware such as a NinoTNC , but as a beginner you're better suited to a piece of software such as QtSoundModem . As the software costs nothing and takes no time to be delivered, it's quicker to get started with! Client Software You'll need a client of some form to be able to connect to the network. I would recommend QtTermTCP to start with. Again, it's free and it works with QtSoundModem, a NinoTNC and other hardware & software offerings too. Addresses Every station on the network has an address. The Government issued yours when you passed your ham exam (or if you've not sat it, they will do once you pass!). My station, as an example, is MM0RFN on the air. Sometimes, when we want to offer a service from our computer, such as a messageboard or chatroom, we will add a number afterwards. We call this an SSID, a Service Set IDentifier. Due to the limitations of AX.25, we can have from number 1 to 15. If you want to connect to my messageboard, you can tell your client to connect straight to MM0RFN-1, or if you want to connect to my chatroom it might be MM0RFN-4. SSIDs are not necessary - some stations have a frontend that will let you choose what service you want to use when you connect. When you call your local node or a nearby station, it is most likely they will have an SSID and you will have to call that. Modes Similar to normal radio, we have different Modes too. Instead of AM, FM, etc, we break to them down to 3 categories: Protocol: How our data is encoded Speed: How fast our data will travel (tied to bandwidth) Modulation: what manner of sound we generate to achieve communication. Both stations must use the same protocol, speed and modulation to communicate on a shared frequency. Protocol We use two main protocols: AX.25 (legacy) and IL2P (modern). AX.25 AX.25 is an umbrella term often used for all packet radio, but really it refers to the specification written between the 70s and 90s that defines the basics of packet. It has a long legacy and is rather simple, but is reliable, embedded in a lot of old hardware and will likely be in use until the heat death of the universe. Learn more here . IL2P IL2P, the 'Improved Layer 2 Protocol' is by Nino KK4HEJ and is an evolution of AX.25. It includes nice things such as error correction of data and allows for, theoretically, more reliable communications but isn't compatible with AX.25. There are a number of varieties of IL2P in the wild too - learn more here . Speeds We often use '1200', '1200bd' or similar as shorthand for how fast our data is sending and received. The 'bd' is baud, or the number of symbols a second. For most of our communications, 1 baud is equivalent to 1 bit per second. We 3 broad speed categories at the moment: 300bd - used on HF. 1200bd - used on VHF 9600bd - used on UHF and beyond Modulation Modulation is a little more complicated than the others as there are many ways to modulate a signal! If you've played with datamodes on a radio already, you will have a reasonable feeling for this already. The key modulations we use are: AFSK Audio Frequncy Shift Keying - Multiple audible tones. This is commonly found on VHF, FM 1200bd links. FSK Frequency Shift Keying - Multiple tones, not necessarily audible. Commonly found on UHF, FM 9600bd links. PSK Phase Shift Keying - Data encoded into changes of phase. Often found on HF links. Radio Set Up Find out your local packet radio frequency first, and tune your radio to see if you can hear any activity. This will be a good indicator as to whether you need to think about HF instead of VHF/UHF. If you're in the UK, this will be listed at ukpacketradio.network or UKRepeater . If information is available online, also take note of the details of the mode as this will come in handy setting up your modem Software Set Up Installation If you're using Debian, Ubuntu or a Raspberry Pi it will be easiest if you install hibby's repo . Once you have done that you can install the prerequisites: sudo apt install qtsoundmodem qttermtcp Configure QtSoundModem We shall set up QtSoundModem to understand the type of signal we are trying to receive. If you have details of the mode as suggested above, QtSoundModem allows easy configuration of the key details. Configure QtTermTCP Open QtTermTCP and set up a Kiss Connection to your Modem. This will work for QtSoundModem or a physical modem. Set up Kiss Connection Click Setup then KISS Configuration. Ensure 'Enable Kiss Interface' is selected, put your callsign in MYCALL and put select your modem from the 'Serial TNC' dropdown. If using a NinoTNC, the speed will be 57600. Press OK to save setting. At this stage, I recommend Monitoring the frequency to see if you can decode any information. Local stations will likely be beaconing and this is a good way to test you have set up correctly without interfering with other users transmissions. Decoded data shall look like: Connect Press Connect and select 'xxx' You should be presented with some choices in the bottom pane. Congratulations, you are on the air!","title":"Beginner's Guide"},{"location":"beginners-guide/#beginners-guide","text":"","title":"Beginner's Guide"},{"location":"beginners-guide/#key-concepts","text":"In packet radio, we connect our computers together over the air to transmit data wirelessly. As it's not as polished as Wifi (but much more fun), there are a few things you'll need to be familiar with before you can get stuck in to the network.","title":"Key Concepts"},{"location":"beginners-guide/#equipment","text":"You'll need a Radio, and a computer with a cable to connect them together. Sometimes these are easy to buy online, and the moreadventurous can make them. If you've done FT-8 or another datamode, you might already have this cable.","title":"Equipment"},{"location":"beginners-guide/#modem","text":"You'll need a modem of some variety. For more advanced users this of often a piece of hardware such as a NinoTNC , but as a beginner you're better suited to a piece of software such as QtSoundModem . As the software costs nothing and takes no time to be delivered, it's quicker to get started with!","title":"Modem"},{"location":"beginners-guide/#client-software","text":"You'll need a client of some form to be able to connect to the network. I would recommend QtTermTCP to start with. Again, it's free and it works with QtSoundModem, a NinoTNC and other hardware & software offerings too.","title":"Client Software"},{"location":"beginners-guide/#addresses","text":"Every station on the network has an address. The Government issued yours when you passed your ham exam (or if you've not sat it, they will do once you pass!). My station, as an example, is MM0RFN on the air. Sometimes, when we want to offer a service from our computer, such as a messageboard or chatroom, we will add a number afterwards. We call this an SSID, a Service Set IDentifier. Due to the limitations of AX.25, we can have from number 1 to 15. If you want to connect to my messageboard, you can tell your client to connect straight to MM0RFN-1, or if you want to connect to my chatroom it might be MM0RFN-4. SSIDs are not necessary - some stations have a frontend that will let you choose what service you want to use when you connect. When you call your local node or a nearby station, it is most likely they will have an SSID and you will have to call that.","title":"Addresses"},{"location":"beginners-guide/#modes","text":"Similar to normal radio, we have different Modes too. Instead of AM, FM, etc, we break to them down to 3 categories: Protocol: How our data is encoded Speed: How fast our data will travel (tied to bandwidth) Modulation: what manner of sound we generate to achieve communication. Both stations must use the same protocol, speed and modulation to communicate on a shared frequency.","title":"Modes"},{"location":"beginners-guide/#protocol","text":"We use two main protocols: AX.25 (legacy) and IL2P (modern).","title":"Protocol"},{"location":"beginners-guide/#ax25","text":"AX.25 is an umbrella term often used for all packet radio, but really it refers to the specification written between the 70s and 90s that defines the basics of packet. It has a long legacy and is rather simple, but is reliable, embedded in a lot of old hardware and will likely be in use until the heat death of the universe. Learn more here .","title":"AX.25"},{"location":"beginners-guide/#il2p","text":"IL2P, the 'Improved Layer 2 Protocol' is by Nino KK4HEJ and is an evolution of AX.25. It includes nice things such as error correction of data and allows for, theoretically, more reliable communications but isn't compatible with AX.25. There are a number of varieties of IL2P in the wild too - learn more here .","title":"IL2P"},{"location":"beginners-guide/#speeds","text":"We often use '1200', '1200bd' or similar as shorthand for how fast our data is sending and received. The 'bd' is baud, or the number of symbols a second. For most of our communications, 1 baud is equivalent to 1 bit per second. We 3 broad speed categories at the moment: 300bd - used on HF. 1200bd - used on VHF 9600bd - used on UHF and beyond","title":"Speeds"},{"location":"beginners-guide/#modulation","text":"Modulation is a little more complicated than the others as there are many ways to modulate a signal! If you've played with datamodes on a radio already, you will have a reasonable feeling for this already. The key modulations we use are: AFSK Audio Frequncy Shift Keying - Multiple audible tones. This is commonly found on VHF, FM 1200bd links. FSK Frequency Shift Keying - Multiple tones, not necessarily audible. Commonly found on UHF, FM 9600bd links. PSK Phase Shift Keying - Data encoded into changes of phase. Often found on HF links.","title":"Modulation"},{"location":"beginners-guide/#radio-set-up","text":"Find out your local packet radio frequency first, and tune your radio to see if you can hear any activity. This will be a good indicator as to whether you need to think about HF instead of VHF/UHF. If you're in the UK, this will be listed at ukpacketradio.network or UKRepeater . If information is available online, also take note of the details of the mode as this will come in handy setting up your modem","title":"Radio Set Up"},{"location":"beginners-guide/#software-set-up","text":"","title":"Software Set Up"},{"location":"beginners-guide/#installation","text":"If you're using Debian, Ubuntu or a Raspberry Pi it will be easiest if you install hibby's repo . Once you have done that you can install the prerequisites: sudo apt install qtsoundmodem qttermtcp","title":"Installation"},{"location":"beginners-guide/#configure-qtsoundmodem","text":"We shall set up QtSoundModem to understand the type of signal we are trying to receive. If you have details of the mode as suggested above, QtSoundModem allows easy configuration of the key details.","title":"Configure QtSoundModem"},{"location":"beginners-guide/#configure-qttermtcp","text":"Open QtTermTCP and set up a Kiss Connection to your Modem. This will work for QtSoundModem or a physical modem.","title":"Configure QtTermTCP"},{"location":"beginners-guide/#set-up-kiss-connection","text":"Click Setup then KISS Configuration. Ensure 'Enable Kiss Interface' is selected, put your callsign in MYCALL and put select your modem from the 'Serial TNC' dropdown. If using a NinoTNC, the speed will be 57600. Press OK to save setting. At this stage, I recommend Monitoring the frequency to see if you can decode any information. Local stations will likely be beaconing and this is a good way to test you have set up correctly without interfering with other users transmissions. Decoded data shall look like:","title":"Set up Kiss Connection"},{"location":"beginners-guide/#connect","text":"Press Connect and select 'xxx' You should be presented with some choices in the bottom pane. Congratulations, you are on the air!","title":"Connect"},{"location":"glossary/","text":"Glossary Term Translation AX.25 The underlying packet radio protocol, sometimes used as a generic term BBS Bulletin Board System - an email and message service hosted on a nearby mailbox NET/ROM A routing and discovery layer that makes connecting to nearby and distant stations easier Node A computer in the network. It can be a full featured system with applications hosted at home or at a nearby site, or it can be a simplified system that only passes messages on behalf others PMS Personal Message System - a reduced functionality BBS hosted on your home node","title":"Glossary"},{"location":"glossary/#glossary","text":"Term Translation AX.25 The underlying packet radio protocol, sometimes used as a generic term BBS Bulletin Board System - an email and message service hosted on a nearby mailbox NET/ROM A routing and discovery layer that makes connecting to nearby and distant stations easier Node A computer in the network. It can be a full featured system with applications hosted at home or at a nearby site, or it can be a simplified system that only passes messages on behalf others PMS Personal Message System - a reduced functionality BBS hosted on your home node","title":"Glossary"},{"location":"hardware/","text":"Hardware Modems NinoTNC NinoTNC is lovely Another Radios GM340 I use this","title":"Hardware"},{"location":"hardware/#hardware","text":"","title":"Hardware"},{"location":"hardware/#modems","text":"","title":"Modems"},{"location":"hardware/#ninotnc","text":"NinoTNC is lovely","title":"NinoTNC"},{"location":"hardware/#another","text":"","title":"Another"},{"location":"hardware/#radios","text":"","title":"Radios"},{"location":"hardware/#gm340","text":"I use this","title":"GM340"},{"location":"repo/","text":"Hibby's Repo Install Signing Key First, you need tell your machine to trust the signature I verify the packages with: wget -q https://online-amateur-radio-club-m0ouk.github.io/oarc-packages/hibby.key sudo mv hibby.key /etc/apt/trusted.gpg.d/hibby.asc You can trust this key - it is contained in Debian and signed as trusted by other developers in the project. Set up Repo Then you need to add the repo for your OS: # Ubuntu 22.04 LTS amd64 sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages jammy main\" >> /etc/apt/sources.list' # Raspberry Pi OS 12 - 'Bookworm' sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages bookworm main\" >> /etc/apt/sources.list' # Raspberry Pi OS 11 - 'Bullseye' sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages bullseye main\" >> /etc/apt/sources.list' # Debian 13 amd64 sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages testing main\" >> /etc/apt/sources.list' # Debian 12 amd64 sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages bookworm main\" >> /etc/apt/sources.list' Update Once the repo is setup, refresh your package lists and we're good to go: sudo apt update","title":"Hibby's Repo"},{"location":"repo/#hibbys-repo","text":"","title":"Hibby's Repo"},{"location":"repo/#install-signing-key","text":"First, you need tell your machine to trust the signature I verify the packages with: wget -q https://online-amateur-radio-club-m0ouk.github.io/oarc-packages/hibby.key sudo mv hibby.key /etc/apt/trusted.gpg.d/hibby.asc You can trust this key - it is contained in Debian and signed as trusted by other developers in the project.","title":"Install Signing Key"},{"location":"repo/#set-up-repo","text":"Then you need to add the repo for your OS: # Ubuntu 22.04 LTS amd64 sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages jammy main\" >> /etc/apt/sources.list' # Raspberry Pi OS 12 - 'Bookworm' sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages bookworm main\" >> /etc/apt/sources.list' # Raspberry Pi OS 11 - 'Bullseye' sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages bullseye main\" >> /etc/apt/sources.list' # Debian 13 amd64 sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages testing main\" >> /etc/apt/sources.list' # Debian 12 amd64 sudo sh -c 'echo \"deb https://online-amateur-radio-club-m0ouk.github.io/oarc-packages bookworm main\" >> /etc/apt/sources.list'","title":"Set up Repo"},{"location":"repo/#update","text":"Once the repo is setup, refresh your package lists and we're good to go: sudo apt update","title":"Update"},{"location":"software/","text":"What are my choices? Currently the choices for software boil down to 3 major stacks LinBPQ LinBPQ is written by John G8BPQ and allows a computer to act as a node in a NET/ROM and AX.25 network. It is being actively developed with both new features and bugfixes being rolled out on a regular basis. It offers the following applications: BBS Chat For details on how to use it: Installation information can be found here . Configuration can be found here . The project website can be found here XROUTER XROUTER is written by Paula G8PZT and allows a computer to act as a node in a NET/ROM and AX.25 network. It is being actively developed with new features and bug fixes. It offers the following applications: Chat Personal Message Server For details on how to use it: Installation information can be found here . Configuration can be found here . The project website can be found here Linux Native Stack The Linux native AX.25 stack has been authored by many over the years, and is shipped as a standard part of Debian. It comprises kernel modules and userland code, and is not bundled as a single big monolithic application. The system offers the following applications: Node frontend via Uronode BBS via FBB Bash or any other terminal with axspawn Many applications with axwrapper For details on how to use it: Installation information can be found here . Configuration can be found here .","title":"What are my choices?"},{"location":"software/#what-are-my-choices","text":"Currently the choices for software boil down to 3 major stacks","title":"What are my choices?"},{"location":"software/#linbpq","text":"LinBPQ is written by John G8BPQ and allows a computer to act as a node in a NET/ROM and AX.25 network. It is being actively developed with both new features and bugfixes being rolled out on a regular basis. It offers the following applications: BBS Chat For details on how to use it: Installation information can be found here . Configuration can be found here . The project website can be found here","title":"LinBPQ"},{"location":"software/#xrouter","text":"XROUTER is written by Paula G8PZT and allows a computer to act as a node in a NET/ROM and AX.25 network. It is being actively developed with new features and bug fixes. It offers the following applications: Chat Personal Message Server For details on how to use it: Installation information can be found here . Configuration can be found here . The project website can be found here","title":"XROUTER"},{"location":"software/#linux-native-stack","text":"The Linux native AX.25 stack has been authored by many over the years, and is shipped as a standard part of Debian. It comprises kernel modules and userland code, and is not bundled as a single big monolithic application. The system offers the following applications: Node frontend via Uronode BBS via FBB Bash or any other terminal with axspawn Many applications with axwrapper For details on how to use it: Installation information can be found here . Configuration can be found here .","title":"Linux Native Stack"},{"location":"clients/qtttcp/","text":"QtTermTCP","title":"QtTermTCP"},{"location":"clients/qtttcp/#qttermtcp","text":"","title":"QtTermTCP"},{"location":"config/bpq/","text":"BPQ Configure BPQ this way: Badly","title":"BPQ"},{"location":"config/bpq/#bpq","text":"Configure BPQ this way: Badly","title":"BPQ"},{"location":"install/bpq/","text":"BPQ Set Up Repo If you have not already done so, set up the repo as shown here . Install To install LinBPQ from the repo, run the below commands: sudo apt update sudo apt install linbpq Configure sudo cp /usr/share/doc/linbpq/examples/bpq32.cfg /etc/bpq32.cfg sudo nano /etc/bpq32.cfg sudo chown :linbpq /etc/bpq32.cfg sudo chmod 644 /etc/bpq32.cfg","title":"BPQ"},{"location":"install/bpq/#bpq","text":"","title":"BPQ"},{"location":"install/bpq/#set-up-repo","text":"If you have not already done so, set up the repo as shown here .","title":"Set Up Repo"},{"location":"install/bpq/#install","text":"To install LinBPQ from the repo, run the below commands: sudo apt update sudo apt install linbpq","title":"Install"},{"location":"install/bpq/#configure","text":"sudo cp /usr/share/doc/linbpq/examples/bpq32.cfg /etc/bpq32.cfg sudo nano /etc/bpq32.cfg sudo chown :linbpq /etc/bpq32.cfg sudo chmod 644 /etc/bpq32.cfg","title":"Configure"},{"location":"install/linux/","text":"Linux Native Stack The linux native stack is highly configurable and can be easily installed on all Debian distros. Install To get a basic node setup, the minimum viable software is: apt install libax25 ax25-tools ax25-apps uronode BBS To set up a BBS install fbb apt install fbb Basic Config We shall set up a single AX.25 port to receive calls and display Uronode to calling stations. ax25 ports Set up your ax25 ports in /etc/ax25/axports The following example is for a NinoTNC: # /etc/ax25/axports # # The format of this file is: # # name callsign speed paclen window description # uhf UR0CAL-10 57600 255 2 UHF 9600bd Modify the callsign to your own or your station's call. This has to be attached as to the modem, in effect telling the computer to listen to the modem's output. Run the below as root: kissattach /dev/ttyACM0 uhf ax25d ax25d (ax25 daemon) listens to incoming data and directs calling stations to the application you want them to use. It can present different applications based on any combination of the callsign calling you, the callsign and SSID the calling station is calling and the port they are calling to. ax25d is controlled by /etc/ax25/ax25d.conf # /etc/ax25/ax25d.conf # # ax25d Configuration File. # # AX.25 Ports begin with a '['. # [UR0CAL-10 via uhf] NOCALL * * * * * * L default * * * * * * - root /usr/sbin/uronode uronode Note the callsign, SSID and port are aligned with the axport in this example. Similar to axports, modify UR0CAL to our own callsign or your station's callsign. ax25d is started by running the below as root: ax25d Stations should be able to call uronode on your system using AX.25.","title":"Linux Native Stack"},{"location":"install/linux/#linux-native-stack","text":"The linux native stack is highly configurable and can be easily installed on all Debian distros.","title":"Linux Native Stack"},{"location":"install/linux/#install","text":"To get a basic node setup, the minimum viable software is: apt install libax25 ax25-tools ax25-apps uronode","title":"Install"},{"location":"install/linux/#bbs","text":"To set up a BBS install fbb apt install fbb","title":"BBS"},{"location":"install/linux/#basic-config","text":"We shall set up a single AX.25 port to receive calls and display Uronode to calling stations.","title":"Basic Config"},{"location":"install/linux/#ax25-ports","text":"Set up your ax25 ports in /etc/ax25/axports The following example is for a NinoTNC: # /etc/ax25/axports # # The format of this file is: # # name callsign speed paclen window description # uhf UR0CAL-10 57600 255 2 UHF 9600bd Modify the callsign to your own or your station's call. This has to be attached as to the modem, in effect telling the computer to listen to the modem's output. Run the below as root: kissattach /dev/ttyACM0 uhf","title":"ax25 ports"},{"location":"install/linux/#ax25d","text":"ax25d (ax25 daemon) listens to incoming data and directs calling stations to the application you want them to use. It can present different applications based on any combination of the callsign calling you, the callsign and SSID the calling station is calling and the port they are calling to. ax25d is controlled by /etc/ax25/ax25d.conf # /etc/ax25/ax25d.conf # # ax25d Configuration File. # # AX.25 Ports begin with a '['. # [UR0CAL-10 via uhf] NOCALL * * * * * * L default * * * * * * - root /usr/sbin/uronode uronode Note the callsign, SSID and port are aligned with the axport in this example. Similar to axports, modify UR0CAL to our own callsign or your station's callsign. ax25d is started by running the below as root: ax25d Stations should be able to call uronode on your system using AX.25.","title":"ax25d"},{"location":"modems/direwolf/","text":"","title":"Direwolf"},{"location":"modems/ninotnc/","text":"NinoTNC The NinoTNC is a modern hardware modem that can come in either kit form or assembled. It connects to a computer by USB, and to a radio by a cable that is usually custom built buy the operator. It supports traditional 300, 1200 and 9600 baud packet modes as well as some more modern experimental modes designed to be more efficient that also include forward error correction. The NinoTNC has become an integral part of many new packet radio deployments in the UK and further afield. Buying one Information is available on the TARPN Website Ordering Page . For the UK & Ireland, boards are are available from Tom, M0LTE . Build The build gide for the NinoTNC is available on the TARPN Website . Operation The Through Hole NinoTNC has 2 banks of switches: Mode and Signals, explanation below. USB is always 57600 baud Mode Switch Current modes as of firmware release 3.3.1: Mode Baud bps Mod Protocol Intended mode BW Typical use 0010 9600 9600 GFSK IL2P+CRC FM 25k Current recommended mode for new 70cm (25kHz) links where both ends are compatible 0100 4800 4800 GFSK IL2P+CRC FM 12.5k Current recommended mode for new 2m (12.5kHz) links where both ends are compatible 0101 2400 2400 DPSK IL2P FM 12.5k For situations where only a speaker/mic connection is available but > 1200 baud is desired 1011 1200 2400 QPSK IL2P+CRC SSB/FM 2.4kHz HF - quadrature version of 1200 BPSK, twice the throughput for +3dB SNR. 1010 1200 1200 BPSK IL2P+CRC SSB/FM 2.4kHz HF - use for circuits where wider transmission is acceptable. 1001 300 600 QPSK IL2P+CRC SSB 500Hz HF - quadrature version of 300 BPSK, twice the throughput for +3dB SNR 1000 300 300 BPSK IL2P+CRC SSB 500Hz HF - slowest but best performing mode. ~7dB better than classic 300 baud FSK AX.25 1110 300 300 AFSK IL2P+CRC SSB 500Hz CRC improvement of IL2P 300 baud AX.25. Recommended if you can't do BPSK / QPSK on HF. Superseded (but still supported) modes: Mode Baud bps Mod Protocol Superseded By Intended mode BW Typical use 0000 9600 9600 GFSK AX.25 9600 GFSK IL2P FM 25k Backwards compatibility with legacy G3RUH modems 0001 9600 9600 GFSK IL2P 9600 GFSK IL2P+CRC FM 25k Backwards compatibility. Obsoleted by 9600 GFSK IL2P+CRC 0011 4800 4800 GFSK IL2P 4800 GFSK IL2P+CRC FM 12.5k Debugging against 4800 GFSK IL2P+CRC in case of issues with the CRC mode 1111 1200 1200 BPSK IL2P 1200 BPSK IL2P+CRC SSB/FM 2.4kHz Backwards compatibility 0111 1200 1200 AFSK IL2P 4800 GFSK IL2P+CRC FM 12.5k Improvement over 1200 AFSK IL2P, where none of the GFSK modes are possible 0110 1200 1200 AFSK AX.25 1200 AFSK IL2P FM 12.5k VHF APRS, backwards compatibility with classic / legacy TNCs like PK232 1100 300 300 AFSK AX.25 300 AFSK IL2P SSB 500Hz Backwards compatibility with legacy HF packet modems. Modulation invented c. 1962! 1101 300 300 AFSK IL2P 300 AFSK IL2P+CRC SSB 500Hz IL2P improvement of AFSK 300 baud AX.25. Prefer: * QPSK > BPSK > DPSK > AFSK * IL2P+CRC > IL2P > IL2P > AX.25 * SSB > FM Signals Switch Switch 1 - Transmit audio range selection - DATA/MIC The data / on / up position increases the TXA level so the TX-LEVEL potentiometer adjustment is in the range needed by the Data radio. The mic / off / down position reduces transmit audio to the range needed by a microphone-level-input radio. Switch 2 - Receive audio sensitivity - 1x/11x The on / up / 1x position is about the right level for a speaker output, and is also appropriate for a data radio output. The off / down / 11x position is used for radios which have a very low level of receive audio, e.g. perhaps when taken from a speaker mic connection. Switch 3 - Transmit audio coupling control - DC/AC Leave in the off / down / AC position unless you have a rare case where having the voltage into the modulator track the TNC\u2019s output, exactly, is required (DC coupling). Switch 4 - External carrier detect - EN/CD Leave in the off / down / CD position unless you want to provide external transmit inhibit using pin 2 of the DB9 connector.","title":"NinoTNC"},{"location":"modems/ninotnc/#ninotnc","text":"The NinoTNC is a modern hardware modem that can come in either kit form or assembled. It connects to a computer by USB, and to a radio by a cable that is usually custom built buy the operator. It supports traditional 300, 1200 and 9600 baud packet modes as well as some more modern experimental modes designed to be more efficient that also include forward error correction. The NinoTNC has become an integral part of many new packet radio deployments in the UK and further afield.","title":"NinoTNC"},{"location":"modems/ninotnc/#buying-one","text":"Information is available on the TARPN Website Ordering Page . For the UK & Ireland, boards are are available from Tom, M0LTE .","title":"Buying one"},{"location":"modems/ninotnc/#build","text":"The build gide for the NinoTNC is available on the TARPN Website .","title":"Build"},{"location":"modems/ninotnc/#operation","text":"The Through Hole NinoTNC has 2 banks of switches: Mode and Signals, explanation below. USB is always 57600 baud","title":"Operation"},{"location":"modems/ninotnc/#mode-switch","text":"Current modes as of firmware release 3.3.1: Mode Baud bps Mod Protocol Intended mode BW Typical use 0010 9600 9600 GFSK IL2P+CRC FM 25k Current recommended mode for new 70cm (25kHz) links where both ends are compatible 0100 4800 4800 GFSK IL2P+CRC FM 12.5k Current recommended mode for new 2m (12.5kHz) links where both ends are compatible 0101 2400 2400 DPSK IL2P FM 12.5k For situations where only a speaker/mic connection is available but > 1200 baud is desired 1011 1200 2400 QPSK IL2P+CRC SSB/FM 2.4kHz HF - quadrature version of 1200 BPSK, twice the throughput for +3dB SNR. 1010 1200 1200 BPSK IL2P+CRC SSB/FM 2.4kHz HF - use for circuits where wider transmission is acceptable. 1001 300 600 QPSK IL2P+CRC SSB 500Hz HF - quadrature version of 300 BPSK, twice the throughput for +3dB SNR 1000 300 300 BPSK IL2P+CRC SSB 500Hz HF - slowest but best performing mode. ~7dB better than classic 300 baud FSK AX.25 1110 300 300 AFSK IL2P+CRC SSB 500Hz CRC improvement of IL2P 300 baud AX.25. Recommended if you can't do BPSK / QPSK on HF. Superseded (but still supported) modes: Mode Baud bps Mod Protocol Superseded By Intended mode BW Typical use 0000 9600 9600 GFSK AX.25 9600 GFSK IL2P FM 25k Backwards compatibility with legacy G3RUH modems 0001 9600 9600 GFSK IL2P 9600 GFSK IL2P+CRC FM 25k Backwards compatibility. Obsoleted by 9600 GFSK IL2P+CRC 0011 4800 4800 GFSK IL2P 4800 GFSK IL2P+CRC FM 12.5k Debugging against 4800 GFSK IL2P+CRC in case of issues with the CRC mode 1111 1200 1200 BPSK IL2P 1200 BPSK IL2P+CRC SSB/FM 2.4kHz Backwards compatibility 0111 1200 1200 AFSK IL2P 4800 GFSK IL2P+CRC FM 12.5k Improvement over 1200 AFSK IL2P, where none of the GFSK modes are possible 0110 1200 1200 AFSK AX.25 1200 AFSK IL2P FM 12.5k VHF APRS, backwards compatibility with classic / legacy TNCs like PK232 1100 300 300 AFSK AX.25 300 AFSK IL2P SSB 500Hz Backwards compatibility with legacy HF packet modems. Modulation invented c. 1962! 1101 300 300 AFSK IL2P 300 AFSK IL2P+CRC SSB 500Hz IL2P improvement of AFSK 300 baud AX.25. Prefer: * QPSK > BPSK > DPSK > AFSK * IL2P+CRC > IL2P > IL2P > AX.25 * SSB > FM","title":"Mode Switch"},{"location":"modems/ninotnc/#signals-switch","text":"","title":"Signals Switch"},{"location":"modems/ninotnc/#switch-1-transmit-audio-range-selection-datamic","text":"The data / on / up position increases the TXA level so the TX-LEVEL potentiometer adjustment is in the range needed by the Data radio. The mic / off / down position reduces transmit audio to the range needed by a microphone-level-input radio.","title":"Switch 1 - Transmit audio range selection - DATA/MIC"},{"location":"modems/ninotnc/#switch-2-receive-audio-sensitivity-1x11x","text":"The on / up / 1x position is about the right level for a speaker output, and is also appropriate for a data radio output. The off / down / 11x position is used for radios which have a very low level of receive audio, e.g. perhaps when taken from a speaker mic connection.","title":"Switch 2 - Receive audio sensitivity - 1x/11x"},{"location":"modems/ninotnc/#switch-3-transmit-audio-coupling-control-dcac","text":"Leave in the off / down / AC position unless you have a rare case where having the voltage into the modulator track the TNC\u2019s output, exactly, is required (DC coupling).","title":"Switch 3 - Transmit audio coupling control - DC/AC"},{"location":"modems/ninotnc/#switch-4-external-carrier-detect-encd","text":"Leave in the off / down / CD position unless you want to provide external transmit inhibit using pin 2 of the DB9 connector.","title":"Switch 4 - External carrier detect - EN/CD"},{"location":"modems/qtsm/","text":"QtSoundModem hi","title":"QtSoundModem"},{"location":"modems/qtsm/#qtsoundmodem","text":"hi","title":"QtSoundModem"},{"location":"radios/","text":"Radios There are a huge number of radios we can use for packet radio, and they can be subdivided arbitrarily into many categories. Known good Beginner Radios Manufacturer Radio Band Motorola GM340 UHF Yaesu FT-7900 VHF / UHF VHF/UHF Radios Manufacturer Radio Band Motorola GM340 UHF Yaesu FT-7900 VHF / UHF HF Radios Manufacturer Radio Yaesu FT-891","title":"Radios"},{"location":"radios/#radios","text":"There are a huge number of radios we can use for packet radio, and they can be subdivided arbitrarily into many categories.","title":"Radios"},{"location":"radios/#known-good-beginner-radios","text":"Manufacturer Radio Band Motorola GM340 UHF Yaesu FT-7900 VHF / UHF","title":"Known good Beginner Radios"},{"location":"radios/#vhfuhf-radios","text":"Manufacturer Radio Band Motorola GM340 UHF Yaesu FT-7900 VHF / UHF","title":"VHF/UHF Radios"},{"location":"radios/#hf-radios","text":"Manufacturer Radio Yaesu FT-891","title":"HF Radios"},{"location":"radios/ft-7900/","text":"Yaesu FT-7900 The FT-7900 is an 2m & 70cm radio manufactured by Yaesu from 2010 to the present day. Bands Band Power Modulation 2m 0 - 50W FM 70cm 0 - 40W FM Interface Yaesu Mini DIN Settings Known Examples Location Band Modem Mode GB7HIB VHF Port 2m NinoTNC 1200bd IL2P","title":"Yaesu FT-7900"},{"location":"radios/ft-7900/#yaesu-ft-7900","text":"The FT-7900 is an 2m & 70cm radio manufactured by Yaesu from 2010 to the present day.","title":"Yaesu FT-7900"},{"location":"radios/ft-7900/#bands","text":"Band Power Modulation 2m 0 - 50W FM 70cm 0 - 40W FM","title":"Bands"},{"location":"radios/ft-7900/#interface","text":"Yaesu Mini DIN","title":"Interface"},{"location":"radios/ft-7900/#settings","text":"","title":"Settings"},{"location":"radios/ft-7900/#known-examples","text":"Location Band Modem Mode GB7HIB VHF Port 2m NinoTNC 1200bd IL2P","title":"Known Examples"},{"location":"radios/ft-891/","text":"Yaesu FT-891 The FT-891 is an HF & 6m radio manufactured by Yaesu from 2016 to the present day. Bands Band Power Modulation HF 0 - 100W SSB 6m 0 - 100W SSB, FM Interface Yaesu Mini DIN Settings Known Examples Location Band Modem Mode GB7HIB HF Port 40m NinoTNC 300bd IL2P","title":"Yaesu FT-891"},{"location":"radios/ft-891/#yaesu-ft-891","text":"The FT-891 is an HF & 6m radio manufactured by Yaesu from 2016 to the present day.","title":"Yaesu FT-891"},{"location":"radios/ft-891/#bands","text":"Band Power Modulation HF 0 - 100W SSB 6m 0 - 100W SSB, FM","title":"Bands"},{"location":"radios/ft-891/#interface","text":"Yaesu Mini DIN","title":"Interface"},{"location":"radios/ft-891/#settings","text":"","title":"Settings"},{"location":"radios/ft-891/#known-examples","text":"Location Band Modem Mode GB7HIB HF Port 40m NinoTNC 300bd IL2P","title":"Known Examples"},{"location":"radios/gm340/","text":"GM340 The Motorola GM340 is a commercial radio. It can be configured as VHF or UHF at the factory and supports deviation suitable for 1200bd and 9600bd. Bands Band Power Modulation UHF 25W FM Interface Settings Known Example MM0RFN is using a GM340 as the 9600bd/UHF port on GB7HIB. General programming advice from BI7JTA was followed, including connector definition.","title":"GM340"},{"location":"radios/gm340/#gm340","text":"The Motorola GM340 is a commercial radio. It can be configured as VHF or UHF at the factory and supports deviation suitable for 1200bd and 9600bd.","title":"GM340"},{"location":"radios/gm340/#bands","text":"Band Power Modulation UHF 25W FM","title":"Bands"},{"location":"radios/gm340/#interface","text":"","title":"Interface"},{"location":"radios/gm340/#settings","text":"","title":"Settings"},{"location":"radios/gm340/#known-example","text":"MM0RFN is using a GM340 as the 9600bd/UHF port on GB7HIB. General programming advice from BI7JTA was followed, including connector definition.","title":"Known Example"}]}